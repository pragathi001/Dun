package think;


import java.util.ArrayList;

import java.util.Scanner;

public class DFGY {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of rows: ");
        int rows = scanner.nextInt();

        System.out.print("Enter the number of columns: ");
        int columns = scanner.nextInt();

        char arr[][] = new char[rows][columns];

       
        System.out.println("Enter the array elements:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < columns; j++) {
                arr[i][j] = scanner.next().charAt(0);
            }
        }

        int aRow = -1, aColumn = -1;
        int gRow = -1, gColumn = -1;
        int mRow = -1, mColumn = -1;

      
        System.out.println("Given array:");
        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < arr[i].length; j++) {
                System.out.print(arr[i][j] + " ");
            }
            System.out.println();
        }
        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < arr[i].length; j++) {
                if (arr[i][j] == 'A') {
                    aRow = i;
                    aColumn = j;
                } else if (arr[i][j] == 'G') {
                    gRow = i;
                    gColumn = j;
                } else if (arr[i][j] == 'M') {
                    mRow = i;
                    mColumn = j;
                }
            }
        }
  if (aRow != -1 && aColumn != -1 && gRow != -1 && gColumn != -1 && mRow != -1 && mColumn != -1) {
            int stepsAG = Math.abs(aRow - gRow) + Math.abs(aColumn - gColumn);
            int stepsMG = Math.abs(mRow - gRow) + Math.abs(mColumn - gColumn);

            System.out.println("Steps from A to G: " + stepsAG);
            System.out.println("Steps from M to G: " + stepsMG);

            if (stepsMG == stepsAG) {
                System.out.println("Minimum number of step: " + stepsMG);
                ArrayList<String> pathAG = findPath(aRow, aColumn, gRow, gColumn);
                System.out.println("Path from A to G:");
                for (String step : pathAG) {
                    System.out.println(step);
                }
            } else {
                System.out.println("No minimum number of step");
            }
        } else {
            System.out.println("A or G not found in the array.");
        }

      
    }

    private static ArrayList<String> findPath(int startX, int startY, int endX, int endY) {
       ArrayList<String> path = new ArrayList<>();
        path.add("(" + startX + ", " + startY + ")");
        while (startX != endX || startY != endY) {
            if (startX < endX) {
                startX++;
            } else if (startX > endX) {
                startX--;
            }

            if (startY < endY) {
                startY++;
            } else if (startY > endY) {
                startY--;
            }
            path.add("(" + startX + ", " + startY + ")");
        }
        return path;
   }
}
