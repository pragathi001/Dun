package durgeon;

import java.util.Scanner;

public class DGHV {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);

		System.out.print("Enter the number of rows: ");
		int rows = scanner.nextInt();

		System.out.print("Enter the number of columns: ");
		int columns = scanner.nextInt();

		char arr[][] = new char[rows][columns];

		System.out.println("Enter the array elements:");
		for (int i = 0; i < rows; i++) {
			for (int j = 0; j < columns; j++) {
				arr[i][j] = scanner.next().charAt(0);
			}
		}

		int aRow = -1, aColumn = -1;
		int gRow = -1, gColumn = -1;
		int mRow = -1, mColumn = -1;
		int tRow = -1, tColumn = -1;

		System.out.println("Given array:");
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[i].length; j++) {
				System.out.print(arr[i][j] + " ");
			}
			System.out.println();
		}

		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[i].length; j++) {
				if (arr[i][j] == 'A') {
					aRow = i;
					aColumn = j;
				} else if (arr[i][j] == 'G') {
					gRow = i;
					gColumn = j;
				} else if (arr[i][j] == 'M') {
					mRow = i;
					mColumn = j;
				} else if (arr[i][j] == 'T') {
					tRow = i;
					tColumn = j;
				}
			}
		}

		if (aRow != -1 && aColumn != -1 && gRow != -1 && gColumn != -1 && mRow != -1 && mColumn != -1 && tRow != -1
				&& tColumn != -1) {
			int stepsAG = Math.abs(aRow - gRow) + Math.abs(aColumn - gColumn);
			int stepsMG = Math.abs(mRow - gRow) + Math.abs(mColumn - gColumn);

			if (stepsMG < stepsAG) {
				int advTrig = Math.abs(aRow - tRow) + Math.abs(aColumn - tColumn);
				int trigGold = Math.abs(tRow - gRow) + Math.abs(tColumn - gColumn);
				System.out.println("Minimum number of steps: " + (advTrig + trigGold));
			} else {
				System.out.println("Minimum number of steps: " + stepsAG);
			}
		} else {
			System.out.println("A, G, M, or T not found in the array.");
		}
	}
}
